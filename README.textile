h1. arver

* https://git.codecoop.org/projects/arver

h2. DESCRIPTION:

arver is a tool to manage encrypted harddisks.

Imagine you are a collective with several admin members. Your servers have 
diffrent LUKS encrypted devices.

Either you would need 1 password for every device which everyone needs to know
or you use arver! Arver has 1 password for each device and for each member. This
password is stored encrypted with the personal gpg-key in the data directory.
The admins only need to know the password to the their own gpg secret key.

This has the following advantages:

* No need to share passwords or password patterns
** Often people share passwords amongst each another. This has the drawback that
   in case of an emergency every password needs to be changed. Which means that
   everyone else needs to learn a bunch of new passwords and changing these
   passwords is also quite cumbersome and time consuming.
** As the amount of passwords might grow with your disks and hosts you will start
   using a password pattern to derive passwords for each disk from that pattern.
   This has the drawback that you can hardly share only partial access to disks
   with a certain admin, as if she knows the pattern she will also likely have
   access to every other disk. Furthermore, if once one password is leaked and
   the patter is easily visible, all the other passwords are also compromised.
* Managing your encrypted harddisks is scriptable, which means that you can
  recover much faster from outages
* Revoking access for an admin is scriptable and therefore done in one call and
  also much safer than revoking manually for each disk.
* Finer grained access. As for each user and each disk there will be a seperate
  password by design. You can also grant access to certain disks also only
  selectively. So for example new admins in your group can only open the disks
  for your most important services or for which they are respnsible, while access
  to the other disks is restriced to other admins.

h1. Usage

arver ships with a detailed man page, describing the usage in detail. 

h1. Limitations

* arver supports only up to 8 users as LUKS has only 8 key slots (LUKS NUMKEYS).

h1. Problems

h2. GPGME and gpg-agent

If arver asks you multiple times for the password, you might consider to use
gpg-agent, so you can decrypt your keypair once and the use it for all your
stored keys.

You can test gpg-agent by trying to decrypt an encrypted file for your user in
data/keys/USERNAME/key_X . It will tell you about possible gpg-erorrs.

Configuring gpg-agent is quite simple and you find information on the following
website: http://dougbarton.us/PGP/gpg-agent.html

If you install gpg-agent like dougbarton recomends, you need to further verify
that the environment variable GPG_AGENT_INFO is accessible within the arver
script. An option is to add the following entry to your .bashrc

    if [ -r "${HOME}/.gpg-agent-info" ]; then
      . ${HOME}/.gpg-agent-info
      export GPG_AGENT_INFO
    fi

Other helpful information can be found on the following websites:

* http://live.gnome.org/GnomeKeyring/Ssh
* http://thefunkcorner.blogspot.com/2008/06/using-gnupg-agent-on-console.html
* http://fedoraproject.org/wiki/DocsProject/UsingGpg/CreatingKeys#head-afa09100f0b78b006dfdc62b5d9e0f315ddabfaf


h1. Requirements

arver only works with cryptsetup-luks >= 1.0.5 as previous versions do not
support key slots properly for our usage.


h1. Installation

The easiest way to install arver is by gem

  sudo gem install arver

This will install all required dependecies automatically. If your distributions
contains an arver package we recommend installation by your package manager.

The following ruby gems are required for arver:

* gpgme 2
* activesupport 2
* highline
* escape

For development you will need the following additional gems:

* rake
* cucumber
* rspec

h1. License

(The MIT License)

Copyright (c) 2010 arver

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
